function [ ] = ShowThresholdedLaserScan( scan, pose )
%
% ShowLaserScan( scan )
%
% Plots all the laser points from a single scan in cartesian space.
%
% INPUTS:
%   scan: struct containing a single laser scan, as generated by
%           GetLaserScans
%   pose: (optional) [x y theta] (m, m, rad) to plot laser in world frame
%
% SEE ALSO:
%   GetLaserScans
%

% Geoff Pascoe
% February 2015
% Mobile Robotics Group, Oxford University.

% verify inputs
if (~(isempty(scan) || ...
        (isstruct(scan) && ...
        (all(isfield(scan, {'timestamp', 'ranges', 'reflectances'}))))))
    error(['%s - scan must be a struct output from ' ...
        'GetLaserScans().'], mfilename);
end

if ~isempty(scan)
    
    % project polar to cartesian
    angles = -((0:size(scan.ranges, 1)-1).'*-scan.step_size - scan.start_angle + 90) * pi/180;
    coords = [scan.ranges.*cos(angles) scan.ranges.*sin(angles)];
    
    if nargin > 1
        pose_se2 = BuildSE2Transform(pose);
        coords = (pose_se2 * [coords ones(size(coords,1),1)]')';
    end
    
    % plot cartesian scans
    colormap gray;
    whitebg(gcf,'black');
    
    %scatter(coords(:,1), coords(:,2), 10, scan.reflectances, 'filled');
    
    items = find(scan.reflectances > 1000);
    scatter(coords(items,1), coords(items,2), 10, scan.reflectances(items), 'filled');
    
    %axis([-20 20 -20 20])
    %axis([-2 2 -2 2])
    axis([-10 10 -10 10])
    axis ij
    axis square
    caxis([0 1000])
    title(num2str(int64(scan.timestamp)));
    xlabel('x [m]');
    ylabel('y [m]');
    
else
    warning('%s - scan is empty.', mfilename);
end

end